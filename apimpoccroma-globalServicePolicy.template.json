{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApimServiceName": {
      "type": "string"
    }
  },
  "resources": [
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - Only the <forward-request> policy element can appear within the <backend> section element.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Policies are applied in the order of their appearance, from the top down.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<cors allow-credentials=\"true\">\r\n\t\t\t<allowed-origins>\r\n\t\t\t\t<origin>https://apimpoccroma.developer.azure-api.net</origin>\r\n\t\t\t</allowed-origins>\r\n\t\t\t<allowed-methods preflight-result-max-age=\"300\">\r\n\t\t\t\t<method>*</method>\r\n\t\t\t</allowed-methods>\r\n\t\t\t<allowed-headers>\r\n\t\t\t\t<header>*</header>\r\n\t\t\t</allowed-headers>\r\n\t\t\t<expose-headers>\r\n\t\t\t\t<header>*</header>\r\n\t\t\t</expose-headers>\r\n\t\t</cors>\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<forward-request />\r\n\t</backend>\r\n\t<outbound />\r\n\t<on-error>\r\n\t\t<choose>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"ExpressionValueEvaluationFailure\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Bad Request\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Bad Request\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"400\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"SubscriptionKeyNotFound\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"SubscriptionKeyInvalid\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"RateLimitExceeded\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"QuotaExceeded\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"FailedToParseCallerIP\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"CallerIpNotAllowed\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"CallerIpBlocked\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"HeaderNotFound\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"HeaderValueNotAllowed\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"TokenNotFound\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"TokenSignatureInvalid\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"TokenAudienceNotAllowed\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"TokenIssuerNotAllowed\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"TokenExpired\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"TokenSignatureKeyNotFound\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"TokenClaimNotFound\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"TokenClaimValueNotAllowed\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"JwtInvalid\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Unauthorized\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"401\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"ClientConnectionFailure\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Request Timeout\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Request Timeout\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"408\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"BackendConnectionFailure\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Service Unavailable\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Service Unavailable\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"503\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.LastError.Reason == \"Timeout\")\">\r\n\t\t\t\t<set-variable name=\"reason\" value=\"Gateway Timeout\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"Gateway Timeout\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"504\" />\r\n\t\t\t</when>\r\n\t\t\t<otherwise>\r\n\t\t\t\t<set-variable name=\"reason\" value=\"@(context.LastError.Reason)\" />\r\n\t\t\t\t<set-variable name=\"errorMessage\" value=\"@(context.LastError.Message)\" />\r\n\t\t\t\t<set-variable name=\"httpError\" value=\"@(context.Response.StatusCode.ToString())\" />\r\n\t\t\t</otherwise>\r\n\t\t</choose>\r\n\t\t<return-response>\r\n\t\t\t<set-status code=\"@(int.Parse((string)context.Variables[\"httpError\"]))\" reason=\"@((string)context.Variables[\"reason\"])\" />\r\n\t\t\t<set-header name=\"Content-Type\" exists-action=\"override\">\r\n\t\t\t\t<value>application/json</value>\r\n\t\t\t</set-header>\r\n\t\t\t<set-body template=\"liquid\">\n                {\n                    \"message\": \"{{context.Variables[\"errorMessage\"]}}\",\n                    \"httpError\": {{context.Variables[\"httpError\"]}}\n                }\n            </set-body>\r\n\t\t</return-response>\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/policy')]",
      "type": "Microsoft.ApiManagement/service/policies",
      "apiVersion": "2019-01-01"
    }
  ]
}