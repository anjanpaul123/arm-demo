{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApimServiceName": {
      "type": "string"
    }
  },
  "resources": [
    {
      "properties": {
        "description": "",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "cachePOC",
        "serviceUrl": "https://reqres.in/",
        "path": "api/users",
        "protocols": [
          "http"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/cachepoc')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "cachepoc",
        "method": "GET",
        "urlTemplate": "/get"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cachepoc/cachepoc')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cachepoc')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\" must-revalidate=\"true\" downstream-caching-type=\"public\">\r\n\t\t\t<vary-by-header>Accept</vary-by-header>\r\n\t\t\t<vary-by-header>Accept-Charset</vary-by-header>\r\n\t\t</cache-lookup>\r\n\t\t<rewrite-uri template=\"/api/users\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t\t<!--    <set-header name=\"Cache-Control\" exists-action=\"override\">\n            <value>max-age=5</value> \n        </set-header>-->\r\n\t\t<cache-store duration=\"@{\n    var header = context.Response.Headers.GetValueOrDefault(\"Cache-Control\",\"\");\n    //var maxAge = \"60\";\n   var maxAge = Regex.Match(header, @\"max-age=(?<maxAge>\\d+)\").Groups[\"maxAge\"]?.Value;\n    return (!string.IsNullOrEmpty(maxAge))?int.Parse(maxAge):60;\n  }\" />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cachepoc/cachepoc/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'cachepoc', 'cachepoc')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "cachepockey",
        "method": "GET",
        "urlTemplate": "/2"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cachepoc/cachepockey')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cachepoc')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<set-variable name=\"clientid\" value=\"@(context.Subscription.Key)\" />\r\n\t\t<cache-lookup-value key=\"@(\"clientversion-\" + context.Variables[\"clientid\"])\" variable-name=\"clientversion\" />\r\n\t\t<choose>\r\n\t\t\t<when condition=\"@(!context.Variables.ContainsKey(\"clientversion\"))\">\r\n\t\t\t\t<!-- Store result in cache -->\r\n\t\t\t\t<cache-store-value key=\"@(\"clientversion-\" + context.Variables[\"clientid\"])\" value=\"users\" duration=\"50\" />\r\n\t\t\t\t<cache-lookup-value key=\"@(\"clientversion-\" + context.Variables[\"clientid\"])\" variable-name=\"clientversion\" />\r\n\t\t\t</when>\r\n\t\t</choose>\r\n\t\t<set-backend-service base-url=\"@(context.Api.ServiceUrl.ToString() + \"api/\" + (string)context.Variables[\"clientversion\"] + \"/\")\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cachepoc/cachepockey/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'cachepoc', 'cachepockey')]"
      ]
    },
    {
      "properties": {
        "displayName": "private"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cachepoc/private')]",
      "type": "Microsoft.ApiManagement/service/apis/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cachepoc')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/devproduct/cachepoc')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cachepoc')]"
      ]
    },
    {
      "properties": {
        "alwaysLog": "allErrors",
        "loggerId": "/subscriptions/34344759-c3a1-4856-8752-b677209afd2b/resourceGroups/cin-s03-uat-rsg-cis-01/providers/Microsoft.ApiManagement/service/apimpoccroma/loggers/apim-dev-log",
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100.0
        },
        "frontend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 1024
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 1024
            }
          }
        },
        "backend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 1024
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 1024
            }
          }
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/cachepoc/applicationinsights')]",
      "type": "Microsoft.ApiManagement/service/apis/diagnostics",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cachepoc')]"
      ]
    },
    {
      "properties": {
        "description": "\n",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Category Selection",
        "serviceUrl": "https://devapimcroma.azure-api.net/categories/mobile-app/v1",
        "path": "",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/category-selection')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "\n",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "null",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Comparing within available categories ",
        "method": "GET",
        "urlTemplate": "/getCategory"
      },
      "name": "[concat(parameters('ApimServiceName'), '/category-selection/comparing-within-available-categories')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'category-selection')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\" must-revalidate=\"true\" downstream-caching-type=\"public\">\r\n\t\t\t<vary-by-header>Accept</vary-by-header>\r\n\t\t\t<vary-by-header>Accept-Charset</vary-by-header>\r\n\t\t</cache-lookup>\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t\t<cache-store duration=\"60\" />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/category-selection/comparing-within-available-categories/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'category-selection', 'comparing-within-available-categories')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/devproduct/category-selection')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'category-selection')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/guestproduct/category-selection')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'category-selection')]"
      ]
    },
    {
      "properties": {
        "description": "\n",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Category Selection (clone)",
        "serviceUrl": "https://devapimcroma.azure-api.net/categories/mobile-app/v1",
        "path": "clone",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/5ebe8610bc2f0b19f8e1c2ba')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "\n",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "null",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Comparing within available categories ",
        "method": "GET",
        "urlTemplate": "/getCategory"
      },
      "name": "[concat(parameters('ApimServiceName'), '/5ebe8610bc2f0b19f8e1c2ba/5ebe8614b6a31545a21fbc41')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5ebe8610bc2f0b19f8e1c2ba')]"
      ]
    },
    {
      "properties": {
        "description": "A sample API with information related to a technical conference.  The available resources  include *Speakers*, *Sessions* and *Topics*.  A single write operation is available to provide  feedback on a session.",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "apiVersion": "v1",
        "isCurrent": true,
        "apiVersionSetId": "[concat(resourceId('Microsoft.ApiManagement/service', parameters('ApimServiceName')), '/apiVersionSets/5ebaa8f13b715226694700e1')]",
        "subscriptionRequired": true,
        "displayName": "Demo Conference API",
        "serviceUrl": "https://conferenceapi.azurewebsites.net",
        "path": "demo",
        "protocols": [
          "http",
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "contentType": "application/vnd.ms-azure-apim.swagger.definitions+json",
        "document": {
          "value": "{\"Body\":{\"type\":\"string\"}}"
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/5ebaa8eab9dd16117cba50c8')]",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "Retreive a representation of a single session by Id",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/hal+json"
              },
              {
                "contentType": "text/plain"
              }
            ]
          }
        ],
        "displayName": "GetSession",
        "method": "GET",
        "urlTemplate": "/session/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSession')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<limit-concurrency key=\"badrequest\" max-count=\"3\">\r\n\t\t\t<forward-request timeout=\"120\" />\r\n\t\t</limit-concurrency>\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSession/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'demo-conference-api', 'GetSession')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A list of sessions.  Optional parameters work as filters to reduce the listed sessions.",
        "request": {
          "queryParameters": [
            {
              "name": "speakername",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "dayno",
              "description": "Format - int32.",
              "type": "integer",
              "required": false,
              "values": []
            },
            {
              "name": "keyword",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetSessions",
        "method": "GET",
        "urlTemplate": "/sessions"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSessions')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "A list of topics covered by a particular session",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetSessionTopics",
        "method": "GET",
        "urlTemplate": "/session/{id}/topics"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSessionTopics')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.hal+json"
              },
              {
                "contentType": "text/plain"
              }
            ]
          }
        ],
        "displayName": "GetSpeaker",
        "method": "GET",
        "urlTemplate": "/speaker/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSpeaker')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<rate-limit calls=\"20\" renewal-period=\"90\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<limit-concurrency key=\"id\" max-count=\"2\">\r\n\t\t\t<forward-request timeout=\"10\" />\r\n\t\t</limit-concurrency>\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSpeaker/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'demo-conference-api', 'GetSpeaker')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "request": {
          "queryParameters": [
            {
              "name": "dayno",
              "description": "Format - int32.",
              "type": "integer",
              "required": false,
              "values": []
            },
            {
              "name": "speakername",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetSpeakers",
        "method": "GET",
        "urlTemplate": "/speakers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSpeakers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSpeakers/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'demo-conference-api', 'GetSpeakers')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetSpeakerSessions",
        "method": "GET",
        "urlTemplate": "/speaker/{id}/sessions"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSpeakerSessions')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetSpeakerTopics",
        "method": "GET",
        "urlTemplate": "/speaker/{id}/topics"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSpeakerTopics')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/hal+json"
              }
            ]
          }
        ],
        "displayName": "GetTopic",
        "method": "GET",
        "urlTemplate": "/topic/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetTopic')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "request": {
          "queryParameters": [
            {
              "name": "dayno",
              "description": "Format - int32.",
              "type": "integer",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetTopics",
        "method": "GET",
        "urlTemplate": "/topics"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetTopics')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetTopicSessions",
        "method": "GET",
        "urlTemplate": "/topic/{id}/sessions"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetTopicSessions')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetTopicSpeakers",
        "method": "GET",
        "urlTemplate": "/topic/{id}/speakers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetTopicSpeakers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "Retreive a representation of a single session by Id",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "text/plain",
              "schemaId": "5ebaa8eab9dd16117cba50c8",
              "typeName": "Body"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/hal+json"
              },
              {
                "contentType": "text/plain"
              }
            ]
          }
        ],
        "displayName": "SubmitSession",
        "method": "POST",
        "urlTemplate": "/session/{id}/feedback"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/SubmitSession')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'demo-conference-api', '5ebaa8eab9dd16117cba50c8')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Echo API",
        "serviceUrl": "http://echoapi.cloudapp.net/api",
        "path": "echo",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a POST call based on the echo backend above. The request body is expected to contain JSON-formatted data (see example below). A policy is used to automatically transform any request sent in JSON directly to XML. In a real-world scenario this could be used to enable modern clients to speak to a legacy backend.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Create resource",
        "method": "POST",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/create-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<json-to-xml apply=\"always\" consider-accept-header=\"false\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/create-resource/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'create-resource')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a PUT call handled by the same \"echo\" backend as above. You can now specify a request body in addition to headers and it will be returned as well.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Modify Resource",
        "method": "PUT",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/modify-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a DELETE call which traditionally deletes the resource. It is based on the same \"echo\" backend as in all other operations so nothing is actually deleted.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Remove resource",
        "method": "DELETE",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/remove-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "The HEAD operation returns only headers. In this demonstration a policy is used to set additional headers when the response is returned and to enable JSONP.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve header only",
        "method": "HEAD",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-header-only')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t\t<set-header name=\"X-My-Sample\" exists-action=\"override\">\r\n\t\t\t<value>This is a sample</value>\r\n\t\t\t<!-- for multiple headers with the same name add additional value elements -->\r\n\t\t</set-header>\r\n\t\t<jsonp callback-parameter-name=\"ProcessResponse\" />\r\n\t</outbound>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-header-only/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'retrieve-header-only')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a GET call on a sample resource. It is handled by an \"echo\" backend which returns a response equal to the request (the supplied headers and body are being returned as received).",
        "request": {
          "queryParameters": [
            {
              "name": "param1",
              "description": "A sample parameter that is required and has a default value of \"sample\".",
              "type": "string",
              "defaultValue": "sample",
              "required": true,
              "values": [
                "sample"
              ]
            },
            {
              "name": "param2",
              "description": "Another sample parameter, set to not required.",
              "type": "number",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Returned in all cases.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve resource",
        "method": "GET",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a GET call with caching enabled on the same \"echo\" backend as above. Cache TTL is set to 1 hour. When you make the first request the headers you supplied will be cached. Subsequent calls will return the same headers as the first time even if you change them in your request.",
        "request": {
          "queryParameters": [
            {
              "name": "param1",
              "description": "A sample parameter that is required and has a default value of \"sample\".",
              "type": "string",
              "defaultValue": "sample",
              "required": true,
              "values": [
                "sample"
              ]
            },
            {
              "name": "param2",
              "description": "Another sample parameter, set to not required.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve resource (cached)",
        "method": "GET",
        "urlTemplate": "/resource-cached"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource-cached')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\">\r\n\t\t\t<vary-by-header>Accept</vary-by-header>\r\n\t\t\t<vary-by-header>Accept-Charset</vary-by-header>\r\n\t\t</cache-lookup>\r\n\t\t<rewrite-uri template=\"/resource\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t\t<cache-store duration=\"3600\" />\r\n\t</outbound>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource-cached/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'retrieve-resource-cached')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/starter/echo-api')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/unlimited/echo-api')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "description": "",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "apiVersion": "v1",
        "isCurrent": true,
        "apiVersionSetId": "[concat(resourceId('Microsoft.ApiManagement/service', parameters('ApimServiceName')), '/apiVersionSets/5eb8f570715fc56dd0a6f578')]",
        "subscriptionRequired": false,
        "displayName": "EmployeeCache",
        "serviceUrl": "http://dummy.restapiexample.com/api/v1",
        "path": "employees",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/employeecache')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "EmployeeDetail",
        "method": "GET",
        "urlTemplate": "/employees"
      },
      "name": "[concat(parameters('ApimServiceName'), '/employeecache/employeedetail')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'employeecache')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<!--cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\" \n        must-revalidate=\"true\" downstream-caching-type=\"public\" /-->\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t\t<!--cache-store duration=\"20\" /-->\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/employeecache/employeedetail/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'employeecache', 'employeedetail')]"
      ]
    },
    {
      "properties": {
        "description": "",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "httpbin",
        "serviceUrl": "https://reqres.in/api/unknown",
        "path": "cache",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/httpbin')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [
            {
              "name": "version",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "cache",
        "method": "GET",
        "urlTemplate": "/get"
      },
      "name": "[concat(parameters('ApimServiceName'), '/httpbin/cache')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'httpbin')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\" must-revalidate=\"true\" downstream-caching-type=\"public\">\r\n\t\t\t<vary-by-header>Accept</vary-by-header>\r\n\t\t\t<vary-by-header>Accept-Charset</vary-by-header>\r\n\t\t</cache-lookup>\r\n\t\t<choose>\r\n\t\t\t<when condition=\"@(context.Request.Url.Query.GetValueOrDefault(\"version\") == \"2013-05\")\">\r\n\t\t\t\t<set-backend-service base-url=\"{{httpbinUri}}\" />\r\n\t\t\t</when>\r\n\t\t\t<when condition=\"@(context.Request.Url.Query.GetValueOrDefault(\"version\") == \"2014-03\")\">\r\n\t\t\t\t<set-backend-service base-url=\"{{usersUri}}\" />\r\n\t\t\t</when>\r\n\t\t</choose>\r\n\t\t<!--<set-query-parameter name=\"version\" exists-action=\"delete\" />-->\r\n\t\t<rewrite-uri template=\"/\" copy-unmatched-params=\"false\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t\t<cache-store duration=\"20\" />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/httpbin/cache/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'httpbin', 'cache')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/httpbin/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'httpbin')]"
      ]
    },
    {
      "properties": {
        "description": "Api Documentation",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "apiVersion": "v1/services",
        "isCurrent": true,
        "apiVersionSetId": "[concat(resourceId('Microsoft.ApiManagement/service', parameters('ApimServiceName')), '/apiVersionSets/5eb91dea4f46be08a70cc59e')]",
        "subscriptionRequired": true,
        "displayName": "IBG Application Insights monitor POC",
        "serviceUrl": "https://13.71.60.204:8082/",
        "path": "ibg",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "contentType": "application/vnd.ms-azure-apim.swagger.definitions+json",
        "document": {
          "value": "{\"Category\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"introductoryStatement\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"object\"}},\"title\":\"Category\"},\"ModelAndView\":{\"type\":\"object\",\"properties\":{\"empty\":{\"type\":\"boolean\"},\"model\":{\"type\":\"object\"},\"modelMap\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"object\"}},\"reference\":{\"type\":\"boolean\"},\"status\":{\"type\":\"string\",\"enum\":[\"100 CONTINUE\",\"101 SWITCHING_PROTOCOLS\",\"102 PROCESSING\",\"103 CHECKPOINT\",\"200 OK\",\"201 CREATED\",\"202 ACCEPTED\",\"203 NON_AUTHORITATIVE_INFORMATION\",\"204 NO_CONTENT\",\"205 RESET_CONTENT\",\"206 PARTIAL_CONTENT\",\"207 MULTI_STATUS\",\"208 ALREADY_REPORTED\",\"226 IM_USED\",\"300 MULTIPLE_CHOICES\",\"301 MOVED_PERMANENTLY\",\"302 FOUND\",\"302 MOVED_TEMPORARILY\",\"303 SEE_OTHER\",\"304 NOT_MODIFIED\",\"305 USE_PROXY\",\"307 TEMPORARY_REDIRECT\",\"308 PERMANENT_REDIRECT\",\"400 BAD_REQUEST\",\"401 UNAUTHORIZED\",\"402 PAYMENT_REQUIRED\",\"403 FORBIDDEN\",\"404 NOT_FOUND\",\"405 METHOD_NOT_ALLOWED\",\"406 NOT_ACCEPTABLE\",\"407 PROXY_AUTHENTICATION_REQUIRED\",\"408 REQUEST_TIMEOUT\",\"409 CONFLICT\",\"410 GONE\",\"411 LENGTH_REQUIRED\",\"412 PRECONDITION_FAILED\",\"413 PAYLOAD_TOO_LARGE\",\"413 REQUEST_ENTITY_TOO_LARGE\",\"414 URI_TOO_LONG\",\"414 REQUEST_URI_TOO_LONG\",\"415 UNSUPPORTED_MEDIA_TYPE\",\"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\"417 EXPECTATION_FAILED\",\"418 I_AM_A_TEAPOT\",\"419 INSUFFICIENT_SPACE_ON_RESOURCE\",\"420 METHOD_FAILURE\",\"421 DESTINATION_LOCKED\",\"422 UNPROCESSABLE_ENTITY\",\"423 LOCKED\",\"424 FAILED_DEPENDENCY\",\"426 UPGRADE_REQUIRED\",\"428 PRECONDITION_REQUIRED\",\"429 TOO_MANY_REQUESTS\",\"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\"451 UNAVAILABLE_FOR_LEGAL_REASONS\",\"500 INTERNAL_SERVER_ERROR\",\"501 NOT_IMPLEMENTED\",\"502 BAD_GATEWAY\",\"503 SERVICE_UNAVAILABLE\",\"504 GATEWAY_TIMEOUT\",\"505 HTTP_VERSION_NOT_SUPPORTED\",\"506 VARIANT_ALSO_NEGOTIATES\",\"507 INSUFFICIENT_STORAGE\",\"508 LOOP_DETECTED\",\"509 BANDWIDTH_LIMIT_EXCEEDED\",\"510 NOT_EXTENDED\",\"511 NETWORK_AUTHENTICATION_REQUIRED\"]},\"view\":{\"$ref\":\"#/definitions/View\"},\"viewName\":{\"type\":\"string\"}},\"title\":\"ModelAndView\"},\"View\":{\"type\":\"object\",\"properties\":{\"contentType\":{\"type\":\"string\"}},\"title\":\"View\"},\"ErrorGet200-Response\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"object\"}},\"ErrorHead200-Response\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"object\"}},\"ErrorPost200-Response\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"object\"}},\"ErrorPut200-Response\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"object\"}},\"ErrorDelete200-Response\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"object\"}},\"ErrorOptions200-Response\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"object\"}},\"ErrorPatch200-Response\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"object\"}},\"MapArray\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/Map\"}},\"CategoryArray\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/Category\"}},\"IbgV1FeedbackmessageIdGet200-Response\":{\"type\":\"object\"},\"IbgV1FirstquestiondetailsIdGet200-Response\":{\"type\":\"object\"},\"IbgV1NextquestionIdGet200-Response\":{\"type\":\"object\"},\"IbgV1QuestionsIdGet200-Response\":{\"type\":\"object\"},\"IbgV1RedisFilenameGet200-Response\":{\"type\":\"string\"},\"IbgV1SubmitIdGet200-Response\":{\"type\":\"object\"}}"
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/5eb91df2b9dd16117cba4849')]",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "error",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "ErrorPatch200-Response"
              }
            ]
          },
          {
            "statusCode": 204,
            "description": "No Content",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "error",
        "method": "PATCH",
        "urlTemplate": "/error"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/errorUsingPATCH')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "basic-error-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/errorUsingPATCH/basic-error-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'errorUsingPATCH')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "error",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "ErrorOptions200-Response"
              }
            ]
          },
          {
            "statusCode": 204,
            "description": "No Content",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "error",
        "method": "OPTIONS",
        "urlTemplate": "/error"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/errorUsingOPTIONS')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "basic-error-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/errorUsingOPTIONS/basic-error-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'errorUsingOPTIONS')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "error",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "ErrorDelete200-Response"
              }
            ]
          },
          {
            "statusCode": 204,
            "description": "No Content",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "error",
        "method": "DELETE",
        "urlTemplate": "/error"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/errorUsingDELETE')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "basic-error-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/errorUsingDELETE/basic-error-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'errorUsingDELETE')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "error",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "ErrorPut200-Response"
              }
            ]
          },
          {
            "statusCode": 201,
            "description": "Created",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Not Found",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "error",
        "method": "PUT",
        "urlTemplate": "/error"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/errorUsingPUT')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "basic-error-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/errorUsingPUT/basic-error-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'errorUsingPUT')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "error",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "ErrorPost200-Response"
              }
            ]
          },
          {
            "statusCode": 201,
            "description": "Created",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Not Found",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "error",
        "method": "POST",
        "urlTemplate": "/error"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/errorUsingPOST')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "basic-error-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/errorUsingPOST/basic-error-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'errorUsingPOST')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "error",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "ErrorHead200-Response"
              }
            ]
          },
          {
            "statusCode": 204,
            "description": "No Content",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "error",
        "method": "HEAD",
        "urlTemplate": "/error"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/errorUsingHEAD')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "basic-error-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/errorUsingHEAD/basic-error-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'errorUsingHEAD')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "error",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "ErrorGet200-Response"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Not Found",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "error",
        "method": "GET",
        "urlTemplate": "/error"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/errorUsingGET')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "basic-error-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/errorUsingGET/basic-error-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'errorUsingGET')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Get all categories",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "CategoryArray"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Not Found",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "Get all categories",
        "method": "GET",
        "urlTemplate": "/ibg/v1/categories"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/getCategoriesUsingGET')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "ibg-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/getCategoriesUsingGET/ibg-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'getCategoriesUsingGET')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "id",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Get attributes by Id",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "MapArray"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Not Found",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "Get attributes by Id",
        "method": "GET",
        "urlTemplate": "/ibg/v1/attribute/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/getAttributeByIdUsingGET')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "ibg-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/getAttributeByIdUsingGET/ibg-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'getAttributeByIdUsingGET')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "id",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Get feedback message by Id. Id should be {QuestionId-AnswerLabel}",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "IbgV1FeedbackmessageIdGet200-Response"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Not Found",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "Get feedback message by Id. Id should be {QuestionId-AnswerLabel}",
        "method": "GET",
        "urlTemplate": "/ibg/v1/feedbackmessage/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/getFeedBackMessageUsingGET')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "ibg-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/getFeedBackMessageUsingGET/ibg-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'getFeedBackMessageUsingGET')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "id",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Get first question details by CategoryId",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "IbgV1FirstquestiondetailsIdGet200-Response"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Not Found",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "Get first question details by CategoryId",
        "method": "GET",
        "urlTemplate": "/ibg/v1/firstquestiondetails/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/getFirstQueDetailsUsingGET')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "ibg-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/getFirstQueDetailsUsingGET/ibg-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'getFirstQueDetailsUsingGET')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "id",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Get next question details by Id. Id should be {QuestionId-AnswerLabel}",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "IbgV1NextquestionIdGet200-Response"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Not Found",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "Get next question details by Id. Id should be {QuestionId-AnswerLabel}",
        "method": "GET",
        "urlTemplate": "/ibg/v1/nextquestion/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/getNextQuestionsByIdUsingGET')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "ibg-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/getNextQuestionsByIdUsingGET/ibg-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'getNextQuestionsByIdUsingGET')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "id",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Get question details by NextQuestionId",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "IbgV1QuestionsIdGet200-Response"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Not Found",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "Get question details by NextQuestionId",
        "method": "GET",
        "urlTemplate": "/ibg/v1/questions/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/getQuestionsByIdUsingGET')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "ibg-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/getQuestionsByIdUsingGET/ibg-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'getQuestionsByIdUsingGET')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "id",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "submit answer details to get attribute. Id should be {QuestionId-AnswerLabel}",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "IbgV1SubmitIdGet200-Response"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Not Found",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "submit answer details to get attribute. Id should be {QuestionId-AnswerLabel}",
        "method": "GET",
        "urlTemplate": "/ibg/v1/submit/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/submitAnswerUsingGET')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "ibg-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/submitAnswerUsingGET/ibg-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'submitAnswerUsingGET')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "filename",
            "description": "filename",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "updateRedis",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Application_Key",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*",
                "schemaId": "5eb91df2b9dd16117cba4849",
                "typeName": "IbgV1RedisFilenameGet200-Response"
              }
            ]
          },
          {
            "statusCode": 401,
            "description": "Unauthorized",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 403,
            "description": "Forbidden",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Not Found",
            "headers": [],
            "representations": [
              {
                "contentType": "*/*"
              }
            ]
          }
        ],
        "displayName": "updateRedis",
        "method": "GET",
        "urlTemplate": "/ibg/v1/redis/{filename}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/updateRedisUsingGET')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', '5eb91df2b9dd16117cba4849')]"
      ]
    },
    {
      "properties": {
        "displayName": "ibg-controller"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/updateRedisUsingGET/ibg-controller')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc', 'updateRedisUsingGET')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<mock-response status-code=\"200\" content-type=\"application/json\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ibg-application-insights-monitor-poc/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ibg-application-insights-monitor-poc')]"
      ]
    },
    {
      "properties": {
        "description": "POC for Service Orchestration",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "ServiceOrchestrationPOC",
        "path": "employeees",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/serviceorchestrationpoc')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [
            {
              "name": "employeeid1",
              "type": "number",
              "required": false,
              "values": []
            },
            {
              "name": "employeeid2",
              "type": "number",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "Employee Details",
        "method": "GET",
        "urlTemplate": "/empdetail"
      },
      "name": "[concat(parameters('ApimServiceName'), '/serviceorchestrationpoc/employee-details')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'serviceorchestrationpoc')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<set-variable name=\"empid1\" value=\"@(context.Request.OriginalUrl.Query.GetValueOrDefault(\"employeeid1\"))\" />\r\n\t\t<set-variable name=\"empid2\" value=\"@(context.Request.OriginalUrl.Query.GetValueOrDefault(\"employeeid2\"))\" />\r\n\t\t<send-request mode=\"new\" response-variable-name=\"empdetails1\" timeout=\"20\" ignore-error=\"false\">\r\n\t\t\t<set-url>@($\"https://reqres.ina/api/users/{(string)context.Variables[\"empid1\"]}\")</set-url>\r\n\t\t\t<set-method>GET</set-method>\r\n\t\t</send-request>\r\n\t\t<send-request mode=\"new\" response-variable-name=\"empdetails2\" timeout=\"20\" ignore-error=\"false\">\r\n\t\t\t<set-url>@($\"https://reqres.in/api/users/{(string)context.Variables[\"empid2\"]}\")</set-url>\r\n\t\t\t<set-method>GET</set-method>\r\n\t\t</send-request>\r\n\t\t<return-response>\r\n\t\t\t<set-status code=\"200\" reason=\"OK\" />\r\n\t\t\t<set-header name=\"Content-Type\" exists-action=\"override\">\r\n\t\t\t\t<value>application/json</value>\r\n\t\t\t</set-header>\r\n\t\t\t<set-body>@{\n                    JObject empJObject1 = JObject.Parse(((IResponse)context.Variables[\"empdetails1\"]).Body.As<string>());\n                    JObject empJObject2 = JObject.Parse(((IResponse)context.Variables[\"empdetails2\"]).Body.As<string>());\n                    JObject compositeResponse = new JObject();\n                    var empDetailsObj1 = empJObject1[\"data\"];\n                    var empDetailsObj2 = empJObject2[\"data\"];\n                    compositeResponse[\"employee1\"] = empDetailsObj1;\n                    compositeResponse[\"employee2\"] = empDetailsObj2;\n                    return compositeResponse.ToString();\n                }</set-body>\r\n\t\t</return-response>\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t\t<!--\n        <choose>\n            <when condition=\"@(context.LastError.Reason == \"ExpressionValueEvaluationFailure\")\">\n                <set-variable name=\"reason\" value=\"Bad Request\" />\n                <set-variable name=\"errorMessage\" value=\"Bad Request\" />\n                <set-variable name=\"httpError\" value=\"400\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"SubscriptionKeyNotFound\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"SubscriptionKeyInvalid\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"RateLimitExceeded\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"QuotaExceeded\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"FailedToParseCallerIP\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"CallerIpNotAllowed\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"CallerIpBlocked\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"HeaderNotFound\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"HeaderValueNotAllowed\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"TokenNotFound\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"TokenSignatureInvalid\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"TokenAudienceNotAllowed\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"TokenIssuerNotAllowed\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"TokenExpired\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"TokenSignatureKeyNotFound\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"TokenClaimNotFound\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"TokenClaimValueNotAllowed\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"JwtInvalid\")\">\n                <set-variable name=\"reason\" value=\"Unauthorized\" />\n                <set-variable name=\"errorMessage\" value=\"Unauthorized\" />\n                <set-variable name=\"httpError\" value=\"401\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"ClientConnectionFailure\")\">\n                <set-variable name=\"reason\" value=\"Request Timeout\" />\n                <set-variable name=\"errorMessage\" value=\"Request Timeout\" />\n                <set-variable name=\"httpError\" value=\"408\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"BackendConnectionFailure\")\">\n                <set-variable name=\"reason\" value=\"Service Unavailable\" />\n                <set-variable name=\"errorMessage\" value=\"Service Unavailable\" />\n                <set-variable name=\"httpError\" value=\"503\" />\n            </when>\n            <when condition=\"@(context.LastError.Reason == \"Timeout\")\">\n                <set-variable name=\"reason\" value=\"Gateway Timeout\" />\n                <set-variable name=\"errorMessage\" value=\"Gateway Timeout\" />\n                <set-variable name=\"httpError\" value=\"504\" />\n            </when>\n            <otherwise>\n                <set-variable name=\"reason\" value=\"@(context.LastError.Reason)\" />\n                <set-variable name=\"errorMessage\" value=\"@(context.LastError.Message)\" />\n                <set-variable name=\"httpError\" value=\"@(context.Response.StatusCode.ToString())\" />\n            </otherwise>\n        </choose>\n        <return-response>\n            <set-status code=\"@(int.Parse((string)context.Variables[\"httpError\"]))\" reason=\"@((string)context.Variables[\"reason\"])\" />\n            <set-header name=\"Content-Type\" exists-action=\"override\">\n                <value>application/json</value>\n            </set-header>\n            <set-body template=\"liquid\">\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                {\n                    \"message\": \"{{context.Variables[\"errorMessage\"]}}\",\n                    \"httpError\": {{context.Variables[\"httpError\"]}}\n                }\n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            </set-body>\n        </return-response>\n        -->\r\n\t\t<!--\n        <set-header name=\"ErrorSource\" exists-action=\"override\">\n            <value>@(context.LastError.Source)</value>\n        </set-header>\n        <set-header name=\"ErrorReason\" exists-action=\"override\">\n            <value>@(context.LastError.Reason)</value>\n        </set-header>\n        <set-header name=\"ErrorMessage\" exists-action=\"override\">\n            <value>@(context.LastError.Message)</value>\n        </set-header>\n        <set-header name=\"ErrorScope\" exists-action=\"override\">\n            <value>@(context.LastError.Scope)</value>\n        </set-header>\n        <set-header name=\"ErrorSection\" exists-action=\"override\">\n            <value>@(context.LastError.Section)</value>\n        </set-header>\n        <set-header name=\"ErrorPath\" exists-action=\"override\">\n            <value>@(context.LastError.Path)</value>\n        </set-header>\n        <set-header name=\"ErrorPolicyId\" exists-action=\"override\">\n            <value>@(context.LastError.PolicyId)</value>\n        </set-header>\n        <set-header name=\"ErrorStatusCode\" exists-action=\"override\">\n            <value>@(context.Response.StatusCode.ToString())</value>\n        </set-header>\n        -->\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/serviceorchestrationpoc/employee-details/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'serviceorchestrationpoc', 'employee-details')]"
      ]
    },
    {
      "properties": {
        "displayName": "private"
      },
      "name": "[concat(parameters('ApimServiceName'), '/serviceorchestrationpoc/private')]",
      "type": "Microsoft.ApiManagement/service/apis/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'serviceorchestrationpoc')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/devproduct/serviceorchestrationpoc')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'serviceorchestrationpoc')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/starter/serviceorchestrationpoc')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'serviceorchestrationpoc')]"
      ]
    },
    {
      "properties": {
        "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "apiVersion": "v1",
        "isCurrent": true,
        "apiVersionSetId": "[concat(resourceId('Microsoft.ApiManagement/service', parameters('ApimServiceName')), '/apiVersionSets/5eb95816f420bb576c0714e1')]",
        "subscriptionRequired": false,
        "displayName": "Swagger TestStore",
        "serviceUrl": "https://petstore.swagger.io/v2",
        "path": "test",
        "protocols": [
          "http",
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "contentType": "application/vnd.ms-azure-apim.swagger.definitions+json",
        "document": {
          "value": "{\"ApiResponse\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"integer\",\"format\":\"int32\"},\"type\":{\"type\":\"string\"},\"message\":{\"type\":\"string\"}}},\"Category\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Category\"}},\"Pet\":{\"type\":\"object\",\"required\":[\"name\",\"photoUrls\"],\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"category\":{\"$ref\":\"#/definitions/Category\"},\"name\":{\"type\":\"string\",\"example\":\"doggie\"},\"photoUrls\":{\"type\":\"array\",\"xml\":{\"wrapped\":true},\"items\":{\"type\":\"string\",\"xml\":{\"name\":\"photoUrl\"}}},\"tags\":{\"type\":\"array\",\"xml\":{\"wrapped\":true},\"items\":{\"xml\":{\"name\":\"tag\"},\"$ref\":\"#/definitions/Tag\"}},\"status\":{\"type\":\"string\",\"description\":\"pet status in the store\",\"enum\":[\"available\",\"pending\",\"sold\"]}},\"xml\":{\"name\":\"Pet\"}},\"Tag\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"name\":{\"type\":\"string\"}},\"xml\":{\"name\":\"Tag\"}},\"Order\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"petId\":{\"type\":\"integer\",\"format\":\"int64\"},\"quantity\":{\"type\":\"integer\",\"format\":\"int32\"},\"shipDate\":{\"type\":\"string\",\"format\":\"date-time\"},\"status\":{\"type\":\"string\",\"description\":\"Order Status\",\"enum\":[\"placed\",\"approved\",\"delivered\"]},\"complete\":{\"type\":\"boolean\"}},\"xml\":{\"name\":\"Order\"}},\"User\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"format\":\"int64\"},\"username\":{\"type\":\"string\"},\"firstName\":{\"type\":\"string\"},\"lastName\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"password\":{\"type\":\"string\"},\"phone\":{\"type\":\"string\"},\"userStatus\":{\"type\":\"integer\",\"format\":\"int32\",\"description\":\"User Status\"}},\"xml\":{\"name\":\"User\"}},\"PetArray\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/Pet\"}},\"StoreInventoryGet200ApplicationJsonResponse\":{\"type\":\"object\",\"additionalProperties\":{\"type\":\"integer\",\"format\":\"int32\"}},\"UserArray\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/User\"}},\"UserLoginGet200ApplicationJsonResponse\":{\"type\":\"string\"},\"UserLoginGet200ApplicationXmlResponse\":{\"type\":\"string\"}}"
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/5eb9581db9dd16117cba4bcf')]",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "description": "List of user object",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "5eb9581db9dd16117cba4bcf",
              "typeName": "UserArray"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Creates list of users with given input array",
        "method": "POST",
        "urlTemplate": "/user/createWithList"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/createUsersWithListInput')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'swagger-teststore', '5eb9581db9dd16117cba4bcf')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/createUsersWithListInput/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'swagger-teststore', 'createUsersWithListInput')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "description": "List of user object",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "5eb9581db9dd16117cba4bcf",
              "typeName": "UserArray"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Creates list of users with given input array",
        "method": "POST",
        "urlTemplate": "/user/createWithArray"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/createUsersWithArrayInput')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'swagger-teststore', '5eb9581db9dd16117cba4bcf')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/createUsersWithArrayInput/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'swagger-teststore', 'createUsersWithArrayInput')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "petId",
            "description": "Format - int64. ID of pet to return",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "Returns a single pet",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "5eb9581db9dd16117cba4bcf",
                "typeName": "Pet"
              },
              {
                "contentType": "application/xml",
                "schemaId": "5eb9581db9dd16117cba4bcf",
                "typeName": "Pet"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Pet not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Find pet by ID",
        "method": "GET",
        "urlTemplate": "/pet/{petId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/getPetById')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'swagger-teststore', '5eb9581db9dd16117cba4bcf')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/getPetById/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'swagger-teststore', 'getPetById')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "orderId",
            "description": "Format - int64. ID of pet that needs to be fetched",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "5eb9581db9dd16117cba4bcf",
                "typeName": "Order"
              },
              {
                "contentType": "application/xml",
                "schemaId": "5eb9581db9dd16117cba4bcf",
                "typeName": "Order"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Order not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Find purchase order by ID",
        "method": "GET",
        "urlTemplate": "/store/order/{orderId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/getOrderById')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'swagger-teststore', '5eb9581db9dd16117cba4bcf')]"
      ]
    },
    {
      "properties": {
        "displayName": "store"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/getOrderById/store')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'swagger-teststore', 'getOrderById')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "status",
            "description": "Status values that need to be considered for filter",
            "type": "array",
            "required": true,
            "values": []
          }
        ],
        "description": "Multiple status values can be provided with comma separated strings",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "5eb9581db9dd16117cba4bcf",
                "typeName": "PetArray"
              },
              {
                "contentType": "application/xml",
                "schemaId": "5eb9581db9dd16117cba4bcf",
                "typeName": "PetArray"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid status value",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Finds Pets by status",
        "method": "GET",
        "urlTemplate": "/pet/findByStatus?status={status}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/findPetsByStatus')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'swagger-teststore', '5eb9581db9dd16117cba4bcf')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<rate-limit calls=\"5\" renewal-period=\"30\" />\r\n\t\t<rate-limit-by-key calls=\"2\" renewal-period=\"30\" counter-key=\"@(context.Subscription?.Key ?? \"anonymous\")\" increment-condition=\"@(context.Response.StatusCode == 401)\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t\t<json-to-xml apply=\"always\" consider-accept-header=\"false\" parse-date=\"false\" />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/findPetsByStatus/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'swagger-teststore', 'findPetsByStatus')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/findPetsByStatus/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'swagger-teststore', 'findPetsByStatus')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "tags",
            "description": "Tags to filter by",
            "type": "array",
            "required": true,
            "values": []
          }
        ],
        "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "5eb9581db9dd16117cba4bcf",
                "typeName": "PetArray"
              },
              {
                "contentType": "application/xml",
                "schemaId": "5eb9581db9dd16117cba4bcf",
                "typeName": "PetArray"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid tag value",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Finds Pets by tags",
        "method": "GET",
        "urlTemplate": "/pet/findByTags?tags={tags}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/findPetsByTags')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'swagger-teststore', '5eb9581db9dd16117cba4bcf')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/findPetsByTags/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'swagger-teststore', 'findPetsByTags')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "username",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "5eb9581db9dd16117cba4bcf",
                "typeName": "User"
              },
              {
                "contentType": "application/xml",
                "schemaId": "5eb9581db9dd16117cba4bcf",
                "typeName": "User"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid username supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "User not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Get user by user name",
        "method": "GET",
        "urlTemplate": "/user/{username}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/getUserByName')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'swagger-teststore', '5eb9581db9dd16117cba4bcf')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/getUserByName/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'swagger-teststore', 'getUserByName')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Logs out current logged in user session",
        "method": "GET",
        "urlTemplate": "/user/logout"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/logoutUser')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/logoutUser/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'swagger-teststore', 'logoutUser')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "username",
            "description": "The user name for login",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "password",
            "description": "The password for login in clear text",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [
              {
                "name": "X-Expires-After",
                "description": "date in UTC when token expires",
                "type": "string",
                "required": false,
                "values": []
              },
              {
                "name": "X-Rate-Limit",
                "description": "calls per hour allowed by the user",
                "type": "integer",
                "required": false,
                "values": []
              }
            ],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "5eb9581db9dd16117cba4bcf",
                "typeName": "UserLoginGet200ApplicationJsonResponse"
              },
              {
                "contentType": "application/xml",
                "schemaId": "5eb9581db9dd16117cba4bcf",
                "typeName": "UserLoginGet200ApplicationXmlResponse"
              }
            ]
          },
          {
            "statusCode": 400,
            "description": "Invalid username/password supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Logs user into the system",
        "method": "GET",
        "urlTemplate": "/user/login?username={username}&password={password}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/loginUser')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'swagger-teststore', '5eb9581db9dd16117cba4bcf')]"
      ]
    },
    {
      "properties": {
        "displayName": "user"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/loginUser/user')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'swagger-teststore', 'loginUser')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Returns a map of status codes to quantities",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "5eb9581db9dd16117cba4bcf",
                "typeName": "StoreInventoryGet200ApplicationJsonResponse"
              }
            ]
          }
        ],
        "displayName": "Returns pet inventories by status",
        "method": "GET",
        "urlTemplate": "/store/inventory"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/getInventory')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'swagger-teststore', '5eb9581db9dd16117cba4bcf')]"
      ]
    },
    {
      "properties": {
        "displayName": "store"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/getInventory/store')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'swagger-teststore', 'getInventory')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "statusTest",
        "method": "GET",
        "urlTemplate": "/status"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/statustest')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<rewrite-uri template=\"/pet/findByStatus?status=sold\" />\r\n\t\t<set-backend-service base-url=\"https://apimpoccroma.azure-api.net/test/v1\" />\r\n\t\t<set-header name=\"Ocp-Apim-Subscription-Key\" exists-action=\"override\">\r\n\t\t\t<value>123</value>\r\n\t\t</set-header>\r\n\t\t<rate-limit-by-key calls=\"2\" renewal-period=\"30\" counter-key=\"@(context.Request.IpAddress)\" increment-condition=\"@(context.Response.StatusCode == 401)\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t\t<xml-to-json kind=\"direct\" apply=\"always\" consider-accept-header=\"false\" />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/statustest/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'swagger-teststore', 'statustest')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "description": "Pet object that needs to be added to the store",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "5eb9581db9dd16117cba4bcf",
              "typeName": "Pet"
            },
            {
              "contentType": "application/xml",
              "schemaId": "5eb9581db9dd16117cba4bcf",
              "typeName": "Pet"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 400,
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          },
          {
            "statusCode": 404,
            "description": "Pet not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          },
          {
            "statusCode": 405,
            "description": "Validation exception",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Update an existing pet",
        "method": "PUT",
        "urlTemplate": "/pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/updatePet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'swagger-teststore', '5eb9581db9dd16117cba4bcf')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/updatePet/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'swagger-teststore', 'updatePet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "petId",
            "description": "Format - int64. ID of pet that needs to be updated",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/x-www-form-urlencoded",
              "formParameters": [
                {
                  "name": "name",
                  "description": "Updated name of the pet",
                  "type": "string",
                  "required": false,
                  "values": []
                },
                {
                  "name": "status",
                  "description": "Updated status of the pet",
                  "type": "string",
                  "required": false,
                  "values": []
                }
              ]
            }
          ]
        },
        "responses": [
          {
            "statusCode": 405,
            "description": "Invalid input",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ]
          }
        ],
        "displayName": "Updates a pet in the store with form data",
        "method": "POST",
        "urlTemplate": "/pet/{petId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/updatePetWithForm')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]"
      ]
    },
    {
      "properties": {
        "displayName": "pet"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/updatePetWithForm/pet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'swagger-teststore', 'updatePetWithForm')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]"
      ]
    },
    {
      "properties": {
        "displayName": "public"
      },
      "name": "[concat(parameters('ApimServiceName'), '/swagger-teststore/public')]",
      "type": "Microsoft.ApiManagement/service/apis/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/guestproduct/swagger-teststore')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/testproduct/swagger-teststore')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'swagger-teststore')]"
      ]
    },
    {
      "properties": {
        "description": "",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "apiVersion": "v1",
        "isCurrent": true,
        "apiVersionSetId": "[concat(resourceId('Microsoft.ApiManagement/service', parameters('ApimServiceName')), '/apiVersionSets/5eba69d8872bf52c1dac8dc1')]",
        "subscriptionRequired": false,
        "displayName": "Test cache key",
        "serviceUrl": "http://dummy.restapiexample.com/api/v1",
        "path": "api",
        "protocols": [
          "http"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/test-cache-key')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "Test",
        "method": "GET",
        "urlTemplate": "/employee/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/test-cache-key/test')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'test-cache-key')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t</inbound>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/test-cache-key/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'test-cache-key')]"
      ]
    },
    {
      "properties": {
        "description": "",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Test Mock API",
        "path": "home",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/test-mock-api')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{ \"sampleField\" : \"test\",\r\n\"tester\":\"API Team\" }"
              }
            ]
          }
        ],
        "displayName": "Test Call",
        "method": "GET",
        "urlTemplate": "/test"
      },
      "name": "[concat(parameters('ApimServiceName'), '/test-mock-api/test-call')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'test-mock-api')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<mock-response status-code=\"200\" content-type=\"application/json\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/test-mock-api/test-call/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'test-mock-api', 'test-call')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/unlimited/test-mock-api')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'test-mock-api')]"
      ]
    },
    {
      "properties": {
        "description": "",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "transformation POC",
        "serviceUrl": "https://reqres.in/api/users",
        "path": "users",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/transformation-poc')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "transformation",
        "method": "GET",
        "urlTemplate": "/2"
      },
      "name": "[concat(parameters('ApimServiceName'), '/transformation-poc/transformation')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'transformation-poc')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<set-backend-service base-url=\"https://reqres.in/api\" />\r\n\t\t<base />\r\n\t\t<set-header name=\"Ocp-Apim-Subscription-Key\" exists-action=\"override\">\r\n\t\t\t<value>50</value>\r\n\t\t</set-header>\r\n\t\t<rate-limit-by-key calls=\"5\" renewal-period=\"60\" counter-key=\"@(context.Request.IpAddress)\" increment-condition=\"@(context.Response.StatusCode >= 200 && context.Response.StatusCode < 300)\" />\r\n\t\t<quota-by-key calls=\"5\" renewal-period=\"301\" counter-key=\"@(context.Request.IpAddress)\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t\t<find-and-replace from=\"Response headers have been sent to the caller.\" to=\"Suripa suripa\" />\r\n\t\t<json-to-xml apply=\"always\" consider-accept-header=\"true\" parse-date=\"true\" />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/transformation-poc/transformation/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'transformation-poc', 'transformation')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/transformation-poc/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'transformation-poc')]"
      ]
    }
  ]
}